#!/bin/sh

SOURCE_HIGHLIGHTER_CMD="source-highlight"
PYGMENTIZE_CMD="pygmentize"

source_highlight_exists=0
if command -v $SOURCE_HIGHLIGHTER_CMD > /dev/null 2>&1
then
    source_highlight_exists=1
fi

pygmentize_exists=0
if command -v $PYGMENTIZE_CMD > /dev/null 2>&1
then
    pygmentize_exists=1
fi

CMD=""
# check if the user has set LESS_COLOR_CMD env var to specify which coloring tool is desired
if [ -n "${LESS_COLOR_CMD}" ]; then
    if [ "${LESS_COLOR_CMD}" = "${SOURCE_HIGHLIGHTER_CMD}" ] && [ $source_highlight_exists = 1 ]; then
        CMD=$SOURCE_HIGHLIGHTER_CMD
    elif [ "${LESS_COLOR_CMD}" = "${PYGMENTIZE_CMD}" ] && [ $pygmentize_exists = 1 ]; then
        CMD=$PYGMENTIZE_CMD
    fi
fi

if [ "${CMD}" = "" ]; then
    if [ $source_highlight_exists = 1 ]; then
        CMD=$SOURCE_HIGHLIGHTER_CMD
    elif [ $pygmentize_exists = 1 ]; then
        CMD=$PYGMENTIZE_CMD
    else
        # none of the highlighers exist
        exit 1
    fi
fi

if [ "$CMD" = "$SOURCE_HIGHLIGHTER_CMD" ]; then
    DEFAULT_FLAGS="--failsafe -f esc --style-file=esc.style -i"
    AUTO_FLAG="--infer-lang"
    BASH_FLAG="--src-lang=bash"
    ZSH_FLAG="--src-lang=zsh"
    PYTHON_FLAG="--src-lang=python"
elif [ "$CMD" = "$PYGMENTIZE_CMD" ]; then
    DEFAULT_FLAGS="-f terminal"
    AUTO_FLAG="-g"
    BASH_FLAG="-l sh"
    ZSH_FLAG="-l zsh"
    PYTHON_FLAG="-l python"
else
    exit 1
fi

case "$1" in
    *.awk|*.groff|*.java|*.js|*.m4|*.php|*.pl|*.pm|*.pod|*.sh|\
    *.ad[asb]|*.asm|*.inc|*.[ch]|*.[ch]pp|*.[ch]xx|*.cc|*.hh|\
    *.lsp|*.l|*.pas|*.p|*.xml|*.xps|*.xsl|*.axp|*.ppd|*.pov|\
    *.diff|*.patch|*.py|*.rb|*.sql|*.ebuild|*.eclass)
        $CMD $AUTO_FLAG $DEFAULT_FLAGS "$1";;

    *.bashrc|*.bash_aliases|*.bash_environment)
        "$CMD" $BASH_FLAG $DEFAULT_FLAGS "$1";;

    */.zshrc)
        "$CMD" $ZSH_FLAG $DEFAULT_FLAGS "$1";;

    *)
        if grep -q "#\!/bin/bash" "$1" 2> /dev/null; then
            "$CMD" $BASH_FLAG $DEFAULT_FLAGS "$1"
        elif grep -q "^#\!/.*/bin.*python" "$1" 2> /dev/null; then
            "$CMD" $PYTHON_FLAG $DEFAULT_FLAGS "$1"
        else
            # return 1 since we didn't handle the file
            exit 1
        fi
esac

# return 0 since we already handled the file
exit 0

